{"ast":null,"code":"var _jsxFileName = \"C:\\\\vishnu\\\\projects\\\\Zynthora ai\\\\frontend\\\\src\\\\components\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Logs.css\";\nimport data from \"../data/sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Logs = ({\n  ftype,\n  flever,\n  fsearch,\n  ffrom,\n  fto\n}) => {\n  _s();\n  // state to track which logs are open\n  const [openLogs, setOpenLogs] = useState({});\n  const getLogType = message => {\n    const keywords = [\"error\", \"failed\", \"exception\", \"timeout\"];\n    const lowerMsg = message.toLowerCase();\n    for (let keyword of keywords) {\n      if (lowerMsg.includes(keyword)) return \"Anomaly\";\n    }\n    return \"Normal\";\n  };\n  const toggleLog = key => {\n    setOpenLogs(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs\",\n      children: data.map((log, idx) => {\n        const logType = getLogType(log.message);\n        const logTime = new Date(log.timestamp).getTime();\n        const fromTime = ffrom ? new Date(ffrom).getTime() : null;\n        const toTime = fto ? new Date(fto).getTime() : null;\n        const inDateRange = (!fromTime || logTime >= fromTime) && (!toTime || logTime <= toTime);\n        if ((ftype === \"All\" || logType === ftype) && (flever === \"All\" || log.level === flever) && (fsearch === \"\" || log.message.toLowerCase().includes(fsearch.toLowerCase())) && inDateRange) {\n          const key = `${log.resourceId}-${idx}`; // unique per filtered array\n          const isOpen = !!openLogs[key];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `log ${logType === \"Normal\" ? \"log-normal\" : \"log-anomaly\"}`,\n            onClick: () => toggleLog(key),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-heading\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: log.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Resource:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.resourceId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" | \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Commit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.commit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Trace Id:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.traceId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Span Id:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.spanId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Commit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.commit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: logType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"fVnY1wUxN0cd7Hb4VveRevtExOo=\");\n_c = Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Logs","ftype","flever","fsearch","ffrom","fto","_s","openLogs","setOpenLogs","getLogType","message","keywords","lowerMsg","toLowerCase","keyword","includes","toggleLog","key","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","idx","logType","logTime","Date","timestamp","getTime","fromTime","toTime","inDateRange","level","resourceId","isOpen","onClick","commit","traceId","spanId","_c","$RefreshReg$"],"sources":["C:/vishnu/projects/Zynthora ai/frontend/src/components/Logs.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Logs.css\"\r\nimport data from \"../data/sample.json\"\r\n\r\nexport const Logs = ({ ftype, flever, fsearch, ffrom, fto }) => {\r\n    // state to track which logs are open\r\n    const [openLogs, setOpenLogs] = useState({})\r\n\r\n    const getLogType = (message) => {\r\n        const keywords = [\"error\", \"failed\", \"exception\", \"timeout\"]\r\n        const lowerMsg = message.toLowerCase()\r\n        for (let keyword of keywords) {\r\n            if (lowerMsg.includes(keyword)) return \"Anomaly\"\r\n        }\r\n        return \"Normal\"\r\n    }\r\n\r\n    const toggleLog = (key) => {\r\n        setOpenLogs(prev => ({ ...prev, [key]: !prev[key] }))\r\n    }\r\n\r\n    return (\r\n        <div className='log-container'>\r\n            <div className='log-heading'>\r\n                <h1>Logs</h1>\r\n            </div>\r\n            <div className='logs'>\r\n                {data.map((log, idx) => {\r\n                    const logType = getLogType(log.message)\r\n                    const logTime = new Date(log.timestamp).getTime()\r\n                    const fromTime = ffrom ? new Date(ffrom).getTime() : null\r\n                    const toTime = fto ? new Date(fto).getTime() : null\r\n                    const inDateRange = (!fromTime || logTime >= fromTime) && (!toTime || logTime <= toTime)\r\n\r\n                    if (\r\n                        (ftype === \"All\" || logType === ftype) &&\r\n                        (flever === \"All\" || log.level === flever) &&\r\n                        (fsearch === \"\" || log.message.toLowerCase().includes(fsearch.toLowerCase())) &&\r\n                        inDateRange\r\n                    ) {\r\n                        const key = `${log.resourceId}-${idx}` // unique per filtered array\r\n                        const isOpen = !!openLogs[key]\r\n\r\n                        return (\r\n                            <div\r\n                                className={`log ${logType === \"Normal\" ? \"log-normal\" : \"log-anomaly\"}`}\r\n                                key={key}\r\n                                onClick={() => toggleLog(key)}\r\n                            >\r\n                                <div className='log-heading'>\r\n                                    <span>{log.level}</span>\r\n                                    <span>{log.timestamp}</span>\r\n                                </div>\r\n                                <div className='log-message'>\r\n                                    <p>{log.message}</p>\r\n                                </div>\r\n                                <div className='log-info'>\r\n                                    <span>Resource:</span>\r\n                                    <span>{log.resourceId}</span>\r\n                                    <span> | </span>\r\n                                    <span>Commit:</span>\r\n                                    <span>{log.commit}</span>\r\n                                </div>\r\n                                {isOpen && (\r\n                                    <div className='log-description'>\r\n                                        <div><span>Trace Id:</span><span>{log.traceId}</span></div>\r\n                                        <div><span>Span Id:</span><span>{log.spanId}</span></div>\r\n                                        <div><span>Commit:</span><span>{log.commit}</span></div>\r\n                                        <div><span>Type:</span><span>{logType}</span></div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return null\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}