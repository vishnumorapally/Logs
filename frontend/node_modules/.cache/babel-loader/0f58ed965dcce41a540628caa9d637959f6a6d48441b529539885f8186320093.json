{"ast":null,"code":"var _jsxFileName = \"C:\\\\vishnu\\\\projects\\\\Zynthora ai\\\\frontend\\\\src\\\\components\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Logs.css\";\nimport data from \"../data/sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Logs = ({\n  ftype,\n  flever,\n  fsearch,\n  ffrom,\n  fto\n}) => {\n  _s();\n  const [openLogId, setOpenLogId] = useState(null);\n\n  // function to auto-detect log type\n  const getLogType = message => {\n    const keywords = [\"error\", \"failed\", \"exception\", \"timeout\"];\n    const lowerMsg = message.toLowerCase();\n    for (let keyword of keywords) {\n      if (lowerMsg.includes(keyword)) {\n        return \"Anomaly\";\n      }\n    }\n    return \"Normal\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs\",\n      children: data.map(log => {\n        // detect log type dynamically\n        const logType = getLogType(log.message);\n\n        // Convert timestamps for date range filtering\n        const logTime = new Date(log.timestamp).getTime();\n        const fromTime = ffrom ? new Date(ffrom).getTime() : null;\n        const toTime = fto ? new Date(fto).getTime() : null;\n        const inDateRange = (!fromTime || logTime >= fromTime) && (!toTime || logTime <= toTime);\n        if ((ftype === \"All\" || logType === ftype) && (flever === \"All\" || log.level === flever) && (fsearch === \"\" || log.message.toLowerCase().includes(fsearch.toLowerCase())) && inDateRange) {\n          const isOpen = openLogId === log.resourceId;\n          const handleshowMore = () => {\n            setOpenLogId(isOpen ? null : log.resourceId);\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `log ${logType === \"Normal\" ? \"log-normal\" : \"log-anomaly\"}`,\n            onClick: handleshowMore,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-heading\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"\",\n                children: log.level\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: log.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Resource:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.resourceId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" | \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Commit:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.commit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Trace Id:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.traceId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Span Id:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.spanId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Commit:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: log.commit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 70\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: logType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 68\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 41\n            }, this)]\n          }, log.resourceId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"ER0vH6BYu6ezMfIZ9+2jYsTiY94=\");\n_c = Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Logs","ftype","flever","fsearch","ffrom","fto","_s","openLogId","setOpenLogId","getLogType","message","keywords","lowerMsg","toLowerCase","keyword","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","logType","logTime","Date","timestamp","getTime","fromTime","toTime","inDateRange","level","isOpen","resourceId","handleshowMore","onClick","commit","traceId","spanId","_c","$RefreshReg$"],"sources":["C:/vishnu/projects/Zynthora ai/frontend/src/components/Logs.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./Logs.css\"\r\nimport data from \"../data/sample.json\"\r\n\r\nexport const Logs = ({ ftype, flever, fsearch, ffrom, fto }) => {\r\n    const [openLogId, setOpenLogId] = useState(null);\r\n\r\n    // function to auto-detect log type\r\n    const getLogType = (message) => {\r\n        const keywords = [\"error\", \"failed\", \"exception\", \"timeout\"]\r\n        const lowerMsg = message.toLowerCase()\r\n        for (let keyword of keywords) {\r\n            if (lowerMsg.includes(keyword)) {\r\n                return \"Anomaly\"\r\n            }\r\n        }\r\n        return \"Normal\"\r\n    }\r\n\r\n    return (\r\n        <div className='log-container'>\r\n            <div className='log-heading'>\r\n                <h1>Logs</h1>\r\n            </div>\r\n            <div className='logs'>\r\n                {\r\n                    data.map((log) => {\r\n                        // detect log type dynamically\r\n                        const logType = getLogType(log.message)\r\n\r\n                        // Convert timestamps for date range filtering\r\n                        const logTime = new Date(log.timestamp).getTime()\r\n                        const fromTime = ffrom ? new Date(ffrom).getTime() : null\r\n                        const toTime = fto ? new Date(fto).getTime() : null\r\n\r\n                        const inDateRange =\r\n                            (!fromTime || logTime >= fromTime) &&\r\n                            (!toTime || logTime <= toTime)\r\n\r\n                        if (\r\n                            (ftype === \"All\" || logType === ftype) &&\r\n                            (flever === \"All\" || log.level === flever) &&\r\n                            (fsearch === \"\" || log.message.toLowerCase().includes(fsearch.toLowerCase())) &&\r\n                            inDateRange\r\n                        ) {\r\n                            const isOpen = openLogId === log.resourceId;\r\n\r\n                            const handleshowMore = () => {\r\n                                setOpenLogId(isOpen ? null : log.resourceId);\r\n                            }\r\n\r\n                            return (\r\n                                <div\r\n                                    className={`log ${logType === \"Normal\" ? \"log-normal\" : \"log-anomaly\"}`}\r\n                                    key={log.resourceId}\r\n                                    onClick={handleshowMore}\r\n                                >\r\n                                    <div className='log-heading'>\r\n                                        <span className=''>{log.level}</span>\r\n                                        <span>{log.timestamp}</span>\r\n                                    </div>\r\n                                    <div className='log-message'>\r\n                                        <p>{log.message}</p>\r\n                                    </div>\r\n                                    <div className='log-info'>\r\n                                        <span>Resource:</span>\r\n                                        <span>{log.resourceId}</span>\r\n                                        <span> | </span>\r\n                                        <span>Commit:</span>\r\n                                        <span>{log.commit}</span>\r\n                                    </div>\r\n                                    {isOpen && (\r\n                                        <div className='log-description'>\r\n                                            <div><span>Trace Id:</span><span>{log.traceId}</span></div>\r\n                                            <div><span>Span Id:</span><span>{log.spanId}</span></div>\r\n                                            <div><span>Commit:</span><span>{log.commit}</span></div>\r\n                                            <div><span>Type:</span><span>{logType}</span></div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return null\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}